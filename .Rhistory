install.packages("roxygen2")
library(roxygen2)
roxygenise()
roxygenise()
devtools::load_all()
library(devtools);
devtools::load_all()
load_all(".")
load_all(".")
library(devtools);
load_all(".")
load_all(".")
data <- fread(".//example.txt")
library(data.table)
data <- fread(".//leukemia.txt")
data <- fread(".C:\Users\xcswapJohn\Desktop\leukemia.txt")
data <- fread("C://Users//xcswapJohn//Desktop//leukemia.txt")
data <- fread("C://Users//xcswapJohn//Desktop//\survivalFunction//leukemia.txt")
data <- fread("C://Users//xcswapJohn//Desktop//survivalFunction//leukemia.txt")
survival(data$Week,             # 時間(必填)
data$Censord,          # 設限(必填)，需定義為：1 = event；0 = censor
data$Group,            # 分組(必填)，接受兩組以上
y = 30,                # 時間點，估計該時間點的統計量
conf.level = 0.95,     # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",     # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson",# 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,           # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,      # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
survivalFast(data$Week,             # 時間(必填)
data$Censord,          # 設限(必填)，需定義為：1 = event；0 = censor
data$Group,            # 分組(必填)，接受兩組以上
y = 30,                # 時間點，估計該時間點的統計量
conf.level = 0.95,     # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",     # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson",# 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,           # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,      # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
roxygenise()
library(roxygen2)
roxygenise()
roxygenise()
library(dplyr)
library(ggplot2)
survivalFast(data$Week,             # 時間(必填)
data$Censord,          # 設限(必填)，需定義為：1 = event；0 = censor
data$Group,            # 分組(必填)，接受兩組以上
y = 30,                # 時間點，估計該時間點的統計量
conf.level = 0.95,     # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",     # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson",# 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,           # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,      # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
library(huxtable)
survivalFast(data$Week,             # 時間(必填)
data$Censord,          # 設限(必填)，需定義為：1 = event；0 = censor
data$Group,            # 分組(必填)，接受兩組以上
y = 30,                # 時間點，估計該時間點的統計量
conf.level = 0.95,     # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",     # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson",# 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,           # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,      # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
survivalFast(data$Week,             # 時間(必填)
data$Censord,          # 設限(必填)，需定義為：1 = event；0 = censor
data$Group,            # 分組(必填)，接受兩組以上
y = 8,                # 時間點，估計該時間點的統計量
conf.level = 0.95,     # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",     # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson",# 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,           # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,      # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
build.my.data <- function(){
canser <- fread("C://Users//xcswapJohn//Desktop//survivalFunction//leukemia.txt")
devtools::use_data(canser,overwrite = TRUE)
}
build.my.data()
devtools::document()
devtools::document()
devtools::document()
roxygenise()
devtools::document()
#====================================================================
build.my.data <- function(){
canser <- fread("C://Users//xcswapJohn//Desktop//survivalFunction//leukemia.txt")
devtools::use_data(canser,overwrite = TRUE)
}
build.my.data()
data(lung,package = survminer)
#============================= test =================================
library(survminer)
data(lung,package = survminer)
data(lung,package = "survminer")
data(lung,package = "survival")
#====================================================================
build.my.data <- function(){
canser <- fread("C://Users//xcswapJohn//Desktop//survivalFunction//leukemia.txt")
usethis::use_data(canser,overwrite = TRUE)
}
build.my.data()
devtools::load_all(".")
cancer
SurvivalFast::canser
library(SurvivalFast)
canser
survivalFast(canser$Week,             # 時間(必填)
canser$Censord,          # 設限(必填)，需定義為：1 = event；0 = censor
canser$Group,            # 分組(必填)，接受兩組以上
y = 8,                # 時間點，估計該時間點的統計量
conf.level = 0.95,     # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",     # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson",# 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,           # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,      # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
survivalFast(canser$Week,             # 時間(必填)
canser$Censord,          # 設限(必填)，需定義為：1 = event；0 = censor
canser$Group,            # 分組(必填)，接受兩組以上
y = 8,                # 時間點，估計該時間點的統計量
conf.level = 0.95,     # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",     # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson",# 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,           # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,      # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
devtools::check()
devtools::load_all(".")
library(SurvivalFast)
canser
survivalFast(canser$time,
canser$status,
canser$sex,
y = 8,
conf.level = 0.95,
conf.type = "log",
hazard.type = "Nelson",
plot = TRUE,
plot.conf = TRUE,
statistics = TRUE)
survivalFast(canser$Week,
canser$Censord,
canser$Group,
y = 8,
conf.level = 0.95,
conf.type = "log",
hazard.type = "Nelson",
plot = TRUE,
plot.conf = TRUE,
statistics = TRUE)
?SurvivalFast
roxygenise()
library(roxygen2)
roxygenise()
usethis::use_mit_license()
usethis::use_package("dplyr", type = "Imports")
usethis::use_package("dplyr", type = "Imports")
usethis::use_package("huxtable", type = "Imports")
usethis::use_package("ggplot2", type = "Imports")
usethis::use_package("ggplot2", type = "Imports")
devtools::load_all(".")
canser
roxygenise()
devtools::load_all(".")
survivalFast(canser$Week,            # 時間(必填)
canser$Censord,         # 設限(必填)，需定義為：1 = event；0 = censor
canser$Group,           # 分組(必填)，接受兩組以上
y = 8,                  # 時間點，估計該時間點的統計量
conf.level = 0.95,      # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",      # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson", # 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,            # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,       # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
devtools::check()
usethis::use_package("ggplot2", type = "Imports")
devtools::load_all(".")
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
usethis::use_package("magrittr", type = "Imports")
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all(".")
library(SurvivalFast)
canser
?canser
survivalFast(canser$Week,            # 時間(必填)
canser$Censord,         # 設限(必填)，需定義為：1 = event；0 = censor
canser$Group,           # 分組(必填)，接受兩組以上
y = 8,                  # 時間點，估計該時間點的統計量
conf.level = 0.95,      # 信心水準，計算信賴區間。預設為0.95
conf.type = "log",      # 計算信賴區間方式：plain；log，預設為plain。
hazard.type = "Nelson", # 計算累積風險函數方式：likelihood；Nelson，預設為likelihood。
plot = TRUE,            # 顯示圖表與否。預設為TRUE
plot.conf = TRUE,       # 顯示信賴區間與否。預設為TRUE
statistics = TRUE)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all(".")
devtools::load_all(".")
library(SurvivalFast)
canser
survivalFast(canser$Week,canser$Censord,canser$Group,y = 8,conf.level = 0.95,conf.type = "log",hazard.type = "Nelson",plot = TRUE,plot.conf = TRUE,statistics = TRUE)
survivalFast(canser$Week,canser$Censord,canser$Group,y = 8,conf.level = 0.95,conf.type = "log",hazard.type = "Nelson",plot = TRUE,plot.conf = TRUE,statistics = TRUE)
